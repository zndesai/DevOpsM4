- name: update
  shell: apt-get update
  sudo: yes

- name: Install packages for node machine
  apt: pkg="{{item}}" state=present update_cache=true
  with_items: 
    - debconf-utils
    - git
    - gcc
    - make
    - python-dev
    - python-pip
    - python-setuptools
    - python-lxml
    - vim
    - libffi-dev
    - libssl-dev
    - libxml2-dev
    - libjpeg8-dev 
    - zlib1g-dev 
- pip:
    name: python-jenkins

- name: add repo
  apt: pkg=software-properties-common state=present update_cache=yes
  sudo: yes

# - name: check mysql is running
#   service: name=mysql state=started enabled=true 

- name: Install Java 8  dependencies
  apt: name=python-software-properties

- name: add webupd8 ppa
  apt_repository: repo='ppa:webupd8team/java'
   
- name: update
  shell: apt-get update
  sudo: yes

- name: Oracle licence Consent
  debconf: name=oracle-java8-installer question=shared/accepted-oracle-license-v1-1 vtype=select value=true
   
- name: Install Java 8
  apt: name=oracle-java8-installer force=yes
   
- name: Update apt-get
  action: apt update_cache=yes
   
- name: Install Maven
  apt: pkg=maven state=present

- name: Adding Apt Key For Jenkins
  apt_key:
    url: "https://jenkins-ci.org/debian/jenkins-ci.org.key"
    state: present
    validate_certs: no

- name: Check For Jenkins List    
  stat: path=/etc/apt/sources.list.d/jenkins.list
  register: jenkins_list

- name: Adding Jenkins Source List
  shell: sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
  when: not jenkins_list.stat.exists
 
- name: Installing Jenkins
  apt:
    name: jenkins     
    state: present
    update_cache: yes
  register: jenkins_install
  when: not jenkins_list.stat.exists

#  when: jenkins_install.changed

#- name: Wait for Jenkins to start up
#  uri:
#    url: "{{jenkins_url}}"
#    status_code: 200
#    timeout: 5
#  register: jenkins_service_status
  # Keep trying for 5 mins in 5 sec intervals
#  retries: 60
#  delay: 5
#  until: >
#     'status' in jenkins_service_status and
#     jenkins_service_status['status'] == 200
#  #when: jenkins_restart_required
 
- name: Creating Directory For Groovy Script - Jenkins
  file:
    path: "{{jenkins_path}}/init.groovy.d"
    state: directory
    mode: 0755
  register: groovy_dir
  when: not jenkins_list.stat.exists

- name: Copying Groovy Script For Deafult Jenkins User Creation
  template:
    force: yes
    src: "../templates/jenkins_script.groovy.j2"
    dest: "{{jenkins_path}}/init.groovy.d/basic-security.groovy"
    mode: 0755
  when: not jenkins_list.stat.exists
 
   
- name: Restarting Jenkins
  service:
    name: jenkins
    state: restarted
  when: not jenkins_list.stat.exists

- name: Wait untils Jenkins web API is available
  shell: curl --head --silent http://localhost:8080/cli/
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: 12
  delay: 10
  when: not jenkins_list.stat.exists


#  when: "git_creds.stdout.find('git_token') == -1"
#  when: jenkins_install.changed 

#- name: Wait for Jenkins to start up
#  uri:
#    url: "{{jenkins_url}}"
#    status_code: 200
#    timeout: 5
#  register: jenkins_service_status
  # Keep trying for 5 mins in 5 sec intervals
#  retries: 60
#  delay: 5
#  until: >
#     'status' in jenkins_service_status and
#     jenkins_service_status['status'] == 200
#  when: jenkins_restart_required
   

- name: Removing Groovy Script
  file:
    path: "{{jenkins_path}}/init.groovy.d/basic-security.groovy"
    state: absent

- name: Downloading Jenkins CLI Jar
  get_url:
    url: "{{jenkins_url}}/jnlpJars/jenkins-cli.jar"
    dest: "/home/vagrant/"
    mode: 0755
  when: groovy_dir.changed

#- name: "Wait For Jenkins To Come Up"
#  uri:
#    url: "{{jenkins_url}}"
#    status_code: 403
#  register: result
#  until: result.status == 403
#  retries: 6
#  delay: 15


- name: Checking Jenkins State
  service:
    name: jenkins
    state: started

- name: Wait untils Jenkins web API is available
  shell: curl --head --silent http://localhost:8080/cli/
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: 12
  delay: 10

#- name: Install Jenkin Plugins 
#  jenkins_plugin:
#    name: "{{ item }}"
#    params: "{{ jenkins_params }}"
#  with_items:
#    - maven-plugin
#    - github
#    - jacoco
#    - junit
#    - test-stability
#    - postbuildscript
#    - postbuild-task
#    - build-timeout
#  register: jenkins_plugins
  

- name: Checking Jenkins State
  service:
    name: jenkins
    state: started

#- name: Checking Credentials In Jenkins
#  become: true
#  shell: "java -jar /home/vagrant/jenkins-cli.jar -s {{jenkins_url}} get-credentials-as-xml \"SystemCredentialsProvider::SystemContextResolver::jenkins\" \"(global)\" \"git_token\" --username admin --password admin"
#  register: git_creds
#  ignore_errors: yes
#  changed_when: "git_creds.stdout.find('git_token') == -1"

#- name: Copying Git Credentials XML
#  template:
#    force: yes
#    src: "../templates/jenkins_git_creds.j2"
#    dest: "/home/vagrant/git_creds.xml"
#    mode: 0755
#  #when: "git_creds.stdout.find('git_token') == -1"
#
#- name: Adding Git Credentials In Jenkins
#  become: true
#  shell: "cat git_creds.xml | java -jar /home/vagrant/jenkins-cli.jar -s {{jenkins_url}} create-credentials-by-xml \"SystemCredentialsProvider::SystemContextResolver::jenkins\" \"(global)\" --username admin --password admin"
#  #when: "git_creds.stdout.find('git_token') == -1"
#
#- name: Removing Git Credentials file
#  file:
#    path: "/home/vagrant/git_creds.xml"
#    state: absent   
  
#- name: Checking SSH KEY Credentials In Jenkins
#  become: true
#  shell: "java -jar /home/vagrant/jenkins-cli.jar -s {{jenkins_url}} get-credentials-as-xml \"SystemCredentialsProvider::SystemContextResolver::jenkins\" \"(global)\" \"ssh_key\" --username admin --password admin"
#  register: ssh_key_creds
#  ignore_errors: yes
## changed_when: "ssh_key_creds.stdout.find('ssh_key') == -1"
#
#- name: Copying SSH KEY Credentials XML
#  template:
#    force: yes
#    src: "../templates/ssh_key.j2"
#    dest: "/home/vagrant/ssh_key.xml"
#    mode: 0755
## changed_when: "ssh_key_creds.stdout.find('ssh_key') == -1"
#
#- name: Adding SSH KEY Credentials In Jenkins
#  become: true
#  shell: "cat ssh_key.xml | java -jar /home/vagrant/jenkins-cli.jar -s {{jenkins_url}} create-credentials-by-xml \"SystemCredentialsProvider::SystemContextResolver::jenkins\" \"(global)\" --username admin --password admin"
## changed_when: "ssh_key_creds.stdout.find('ssh_key') == -1"
#  ignore_errors: yes
#
#- name: Removing SSH KEY Credentials XML
#  file:
#    path: "/home/vagrant/ssh_key.xml"
#    state: absent 
#   
- name: Restarting Jenkins
  service:
    name: jenkins
    state: restarted

#- name: "Wait For Jenkins To Come Up"
#  uri:
#    url: "{{jenkins_url}}/cli/"
#    status_code: 403
#  register: result
#  until: result.status == 403
#  retries: 6
#  delay: 15

- name: Wait untils Jenkins web API is available
  shell: curl --head --silent http://localhost:8080/cli/
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: 12
  delay: 10
   
#- jenkins_job:
#      config: "{{ lookup('template', '../templates/checkbox.xml.j2') }}"
#      name: checkboxio
#      password: admin
#      url: "http://192.168.33.80:8080"
#      user: admin

#- jenkins_job:
#     config: "{{ lookup('template', '../templates/itrust.xml.j2') }}"
#     name: iTrust
#     password: admin
#     url: "http://192.168.33.80:8080"
#     user: admin




- name: Checking Job List For checkbox
  become: true
  shell: "java -jar /home/vagrant/jenkins-cli.jar -s {{jenkins_url}} list-jobs --username admin --password admin"
  register: job_cb
  changed_when: "job_cb.stdout.find('checkbox') == -1"
   
- name: Copying checkbox.xml 
  copy: 
    src: ../files/checkbox.xml
    dest: "/home/vagrant/checkbox.xml"
  when: "job_cb.stdout.find('checkbox') == -1"

- name: Create Jenkins checkbox Job Using XML
  become: true
  shell: "java -jar /home/vagrant/jenkins-cli.jar -s {{jenkins_url}} create-job checkbox < /home/vagrant/checkbox.xml --username admin --password admin"
  when: "job_cb.stdout.find('checkbox') == -1"

- name: Removing checkbox XML file
  file:
    path: "/home/vagrant/checkbox.xml"
    state: absent 

- name: Checking Job List For iTrust
  become: true
  shell: "java -jar /home/vagrant/jenkins-cli.jar -s {{jenkins_url}} list-jobs --username admin --password admin"
  register: job_itrust
  changed_when: "job_itrust.stdout.find('iTrust') == -1"
   
- name: Copying itrust.xml 
  copy: 
    src: ../files/itrust.xml
    dest: "/home/vagrant/itrust.xml"
  when: "job_itrust.stdout.find('iTrust') == -1"

- name: Create Jenkins iTrust Job Using XML
  become: true
  shell: "java -jar /home/vagrant/jenkins-cli.jar -s {{jenkins_url}} create-job iTrust < /home/vagrant/itrust.xml --username admin --password admin"
  when: "job_itrust.stdout.find('iTrust') == -1"


- name: Removing iTrust XML file
  file:
    path: "/home/vagrant/itrust.xml"
    state: absent 

- name: Copying itrust-fuzzer.xml 
  copy: 
    src: ../files/itrust-fuzzer.xml
    dest: "/home/vagrant/itrust-fuzzer.xml"
  when: "job_itrust.stdout.find('iTrust-Fuzzer') == -1"

- name: Create Jenkins iTrust-Fuzzer Job Using XML
  become: true
  shell: "java -jar /home/vagrant/jenkins-cli.jar -s {{jenkins_url}} create-job iTrust-Fuzzer < /home/vagrant/itrust-fuzzer.xml --username admin --password admin"
  when: "job_itrust.stdout.find('iTrust-Fuzzer') == -1"

- name: Removing iTrust Fuzzer XML file
  file:
    path: "/home/vagrant/itrust-fuzzer.xml"
    state: absent
  when: "job_itrust.stdout.find('iTrust-Fuzzer') == -1"

